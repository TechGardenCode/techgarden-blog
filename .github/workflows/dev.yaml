name: ghcr publish

on:
  push:
    branches: ['dev']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-dev:
    if: github.event_name == 'push' && contains(github.ref, 'refs/heads/dev')
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build the Spring Boot app
        run: ./mvnw clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto
            prefix=
            suffix=
          tags: |
            type=sha,prefix=,format=long
            type=raw,value=dev,enable=${{ github.ref == format('refs/heads/{0}', 'dev') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-dev:
    needs: build-and-push-dev
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Clone GitOps repo
        run: |
          git clone https://x-access-token:${{ secrets.GITOPS_PUSH_TOKEN }}@github.com/techgardencode/homelab.git
          cd homelab/kubernetes/clusters/1276-dev/techgarden/blog
          echo "GITOPS_PATH=$PWD" >> $GITHUB_ENV

      - name: Update kustomization.yaml with new image tag
        run: |
          cd $GITOPS_PATH
          yq -i '.image.tag = "${{ github.sha }}"' values.yaml

      - name: Commit and push to GitOps repo
        run: |
          cd $GITOPS_PATH
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add values.yaml
          git commit -m "chore: update image tag to ${{ github.sha }}"
          git push